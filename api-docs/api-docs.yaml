openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://192.168.0.161:8443
  description: Generated server url
paths:
  /api/users/{id}:
    get:
      tags:
      - user-rest-controller
      summary: Finds the user information
      operationId: findUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: There was no user associated with the provided user id
        "401":
          description: The requester is not authorized to perform this operation
        "200":
          description: Returns the information of a requested user
    put:
      tags:
      - user-rest-controller
      summary: Updates the information of a user
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequestDto'
        required: true
      responses:
        "404":
          description: There was no user associated with the provided user id
        "401":
          description: The requester is not authorized to perform this operation
        "400":
          description: The provided input was not valid
        "200":
          description: The information update of the user was successful
  /api/sales/{type}:
    get:
      tags:
      - sale-rest-controller
      summary: Find the specific details of the specified discount type if active
      operationId: findCurrentDiscount
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the current active discount of the specified type
        "400":
          description: There is no known existence of the provided discount type
        "404":
          description: The given discount type is currently inactive
        "401":
          description: The requester has no permissions to perform this operation
    put:
      tags:
      - sale-rest-controller
      summary: Updates the details of the discount of the given type
      operationId: updateCurrentDiscount
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSaleRequestDto'
        required: true
      responses:
        "404":
          description: The given discount type does not exist
        "401":
          description: The requester has no permissions to perform this operation
        "200":
          description: The details of the discount have been successfully updated
  /api/orders/{id}:
    get:
      tags:
      - order-rest-controller
      summary: Finds the logged in user concrete order by its id
      operationId: findOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: content
        in: query
        required: false
        schema:
          type: string
      responses:
        "401":
          description: The requester is not authorized to perform this operation
        "200":
          description: Returns the concrete requested order
        "404":
          description: The order in question was not found
    put:
      tags:
      - order-rest-controller
      summary: Updates the details of a given order
      operationId: updateOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRequestDto'
        required: true
      responses:
        "400":
          description: Some invalid details where provided that prevented the operation
            completion
        "200":
          description: The order has been successfully updated
        "401":
          description: The requester is not authorized to perform this operation
        "404":
          description: Cannot update the order because it does not exist
  /api/users:
    get:
      tags:
      - user-rest-controller
      summary: Finds a paginated list of users
      operationId: findUsers
      parameters:
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: amount
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "401":
          description: The requester is not authorized to perform this operation
        "200":
          description: The list of users was retrieved successfully
        "404":
          description: There are no users available for the provided pagination information
    post:
      tags:
      - user-rest-controller
      summary: Registers a new user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequestDto'
        required: true
      responses:
        "201":
          description: The new user creation was successful
        "401":
          description: The requester is not authorized to perform this operation
        "400":
          description: The provided input was not valid
  /api/tokens:
    get:
      tags:
      - token-rest-controller
      summary: Validates a given token
      operationId: validateToken
      responses:
        "200":
          description: Returns the validation response with the validation result
        "400":
          description: The token was invalid or no token was provided at all
    post:
      tags:
      - token-rest-controller
      summary: Generates a token for the provided user credentials
      operationId: generateToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateTokenRequestDto'
        required: true
      responses:
        "200":
          description: Returns the generated token
        "400":
          description: The provided credentials to generate a token were invalid
  /api/orders:
    get:
      tags:
      - order-rest-controller
      summary: Finds the logged in user paginated orders
      operationId: findAllOrders
      parameters:
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: amount
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Returns a list of orders according to the pagination properties
        "400":
          description: The request parameters or some other piece of the request is
            invalid
        "401":
          description: The requester is not authorized to perform this operation
        "404":
          description: There were no orders to be found for the logged in user
    post:
      tags:
      - order-rest-controller
      summary: Places an order to purchase the specified product
      operationId: placeOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceOrderRequestDto'
        required: true
      responses:
        "400":
          description: The request was incomplete or the parameters were invalid
        "401":
          description: The requester is not authorized to perform this operation
        "404":
          description: Cannot perform the order because the product does not exist
        "200":
          description: The order from the user was found successfully
  /api/statistics:
    get:
      tags:
      - statistics-rest-controller
      summary: Finds the statistics associated to the sales
      operationId: findStatistics
      responses:
        "200":
          description: The sales statistics were found successfully
        "401":
          description: The requester is not authorized to perform this operation
  /api/products:
    get:
      tags:
      - product-rest-controller
      summary: Finds a list of all products
      operationId: findAllProducts
      responses:
        "400":
          description: Can not access to find products
        "404":
          description: There were no more products to be shown
        "200":
          description: The list of products was found successfully
  /api/not_found:
    get:
      tags:
      - error-rest-controller
      summary: Send an error if the page does not exist
      operationId: notFound
      responses:
        "404":
          description: There was an error when trying to perform a operation
  /api/error:
    get:
      tags:
      - error-rest-controller
      summary: Send an error if some process has failed
      operationId: error
      responses:
        "400":
          description: There was an error when trying to perform a operation
components:
  schemas:
    UpdateUserRequestDto:
      type: object
      properties:
        encoded_picture:
          type: string
        content_type:
          type: string
        first_name:
          type: string
        surname:
          type: string
        address:
          type: string
        email:
          type: string
        password:
          type: string
        enabled:
          type: boolean
    UpdateSaleRequestDto:
      type: object
      properties:
        product_id:
          type: integer
          format: int64
        start:
          type: string
          format: date-time
        stop:
          type: string
          format: date-time
        discount:
          type: integer
          format: int32
        amount:
          type: integer
          format: int32
        enabled:
          type: boolean
    UpdateOrderRequestDto:
      type: object
      properties:
        months:
          type: integer
          format: int32
        cancel:
          type: boolean
    RegisterUserRequestDto:
      required:
      - address
      - email
      - first_name
      - password
      - surname
      type: object
      properties:
        first_name:
          pattern: "^[a-zA-Z -]+$"
          type: string
        surname:
          pattern: "^[a-zA-Z -]+$"
          type: string
        address:
          type: string
        email:
          maxLength: 255
          minLength: 0
          type: string
        password:
          pattern: "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
          type: string
    GenerateTokenRequestDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    PlaceOrderRequestDto:
      type: object
      properties:
        product_id:
          type: integer
          format: int64
